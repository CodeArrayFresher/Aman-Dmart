@model NestedTable.Models.ProductModel



<div class="modal-body">
   <h4 style="text-align:center;color:darkblue">Add discount</h4>
    @using (Html.BeginForm("_Add_Discount", "Home", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal form-group justify-content-center discount_page" style="width:300px;">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Select Product")
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Id, new SelectList(Model.productlist, "Id", "Name"), "Select", new { id = "ProductList", @class = "form-control",style="width:400px;" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Unit_Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Unit_Price, new { htmlAttributes = new { @class = "form-control", style = "width:400px;",id="pid" } })
                @Html.ValidationMessageFor(model => model.Unit_Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("IsPercentile")
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsPercentile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsPercentile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Discounte")
            <div class="col-md-10">
                @Html.EditorFor(model => model.disc_value, new { htmlAttributes = new { @class = "form-control", style = "width:400px;" } })
                @Html.ValidationMessageFor(model => model.Unit_Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("EffectiveFromDate")
            <div class="col-md-10">
                @Html.EditorFor(model => model.PEfromdate, new { htmlAttributes = new { @class = "form-control", style = "width:400px;" } })
                @Html.ValidationMessageFor(model => model.IsPercentile, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("EffectiveToDate")
            <div class="col-md-10">
                @Html.EditorFor(model => model.PEfTodate, new { htmlAttributes = new { @class = "form-control", style = "width:400px;" } })
                @Html.ValidationMessageFor(model => model.IsPercentile, "", new { @class = "text-danger" })
            </div>
        </div><br />


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 text-center">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </div>
    </div>
    }

</div>
